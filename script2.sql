-- É IMPORTANTE CRIAR RECORD'S QUANDO NÃO A NECESSIDADE DE UTILIZAR UMA TABELA INTEIRA, OU GUARDAR DADOS DE ALGUMAS TABELAS EM UM UM OBJETO COM O TIPO ESPECIFICADO QUE SERÁ ALOCADO NA MEMÓRIA

DECLARE
  TYPE CLIENTE_RECORD_TYPE IS RECORD
       (
          COD_CONTRATO TCONTRATO.COD_CONTRATO%TYPE,
          DATA TCONTRATO.DATA%TYPE,
          COD_ALUNO TCONTRATO.COD_ALUNO%TYPE,
          TOTAL TCONTRATO.TOTAL%TYPE,
          DESCONTO TCONTRATO.DESCONTO%TYPE
        );
CONTRATO_RECORD CLIENTE_RECORD_TYPE;
BEGIN
    CONTRATO_RECORD.COD_CONTRATO := 1;
    DBMS_OUTPUT.PUT_LINE(CONTRATO_RECORD.COD_CONTRATO);
END;

--OU

DECLARE
CONTRATO_RECORD TCONTRATO%ROWTYPE;
BEGIN
SELECT COD_CONTRATO INTO CONTRATO_RECORD.COD_CONTRATO FROM TCONTRATO;
DBMS_OUTPUT.PUT_LINE(CONTRATO_RECORD.COD_CONTRATO);
END;


DECLARE
  ALU TALUNO%ROWTYPE;
BEGIN
  SELECT NOME INTO ALU.NOME FROM TALUNO WHERE COD_ALUNO = 44;
  Dbms_Output.PUT_LINE(ALU.NOME);
END;

DECLARE
   TYPE ALUNO_RECORD_TYPE IS RECORD(
     COD_ALUNO TALUNO.%ROWTYPE,
     NOME TALUNO.%ROWTYPE
   )ALUNO_RECORD ALUNO_RECORD_TYPE;
BEGIN

END;

SELECT * FROM TALUNO;


SELECT * FROM TCONTRATO;


Declare
      Cursor Cur_alu Is
      Select cod_aluno, nome
      From TAluno;
      Reg_alu Cur_alu%Rowtype;
Begin
      Open Cur_alu;
      Loop
            Fetch Cur_alu
            Into Reg_alu;
            Exit When
                      Cur_alu%NotFound;
            Dbms_Output.Put_Line
                      (Reg_alu.nome);
      End Loop;
      Close Cur_alu;
End;